<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-05T07:37:19 IST" name="API Testing Suite" finished-at="2024-09-05T07:37:22 IST" duration-ms="3063">
    <groups>
    </groups>
    <test started-at="2024-09-05T07:37:19 IST" name="API Tests" finished-at="2024-09-05T07:37:22 IST" duration-ms="3063">
      <class name="com.example.tests.UserTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.example.tests.UserTests@58695725]" started-at="2024-09-05T07:37:19 IST" name="setup" finished-at="2024-09-05T07:37:20 IST" duration-ms="776" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testCreateUserAndPlaceOrder()[pri:0, instance:com.example.tests.UserTests@58695725]" started-at="2024-09-05T07:37:20 IST" name="testCreateUserAndPlaceOrder" finished-at="2024-09-05T07:37:21 IST" duration-ms="1760" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUserAndPlaceOrder -->
        <test-method signature="testGetAllData()[pri:0, instance:com.example.tests.UserTests@58695725]" started-at="2024-09-05T07:37:21 IST" name="testGetAllData" finished-at="2024-09-05T07:37:21 IST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllData -->
        <test-method signature="testUserLogin()[pri:0, instance:com.example.tests.UserTests@58695725]" started-at="2024-09-05T07:37:21 IST" name="testUserLogin" finished-at="2024-09-05T07:37:21 IST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserLogin -->
        <test-method signature="testUserRegistration()[pri:0, instance:com.example.tests.UserTests@58695725]" started-at="2024-09-05T07:37:21 IST" name="testUserRegistration" finished-at="2024-09-05T07:37:22 IST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistration -->
      </class> <!-- com.example.tests.UserTests -->
      <class name="com.example.tests.ApiTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.example.tests.ApiTest@543588e6]" started-at="2024-09-05T07:37:22 IST" name="setup" finished-at="2024-09-05T07:37:22 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testCreateProductWithQueryAndPathParameters()[pri:0, instance:com.example.tests.ApiTest@543588e6]" started-at="2024-09-05T07:37:22 IST" name="testCreateProductWithQueryAndPathParameters" finished-at="2024-09-05T07:37:22 IST" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateProductWithQueryAndPathParameters -->
        <test-method signature="testGetProductWithQueryAndPathParameters()[pri:0, instance:com.example.tests.ApiTest@543588e6]" started-at="2024-09-05T07:37:22 IST" name="testGetProductWithQueryAndPathParameters" finished-at="2024-09-05T07:37:22 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetProductWithQueryAndPathParameters -->
      </class> <!-- com.example.tests.ApiTest -->
      <class name="com.example.tests.Create">
        <test-method signature="testCreateProductWithQueryAndPathParameters()[pri:0, instance:com.example.tests.Create@5d7148e2]" started-at="2024-09-05T07:37:22 IST" name="testCreateProductWithQueryAndPathParameters" finished-at="2024-09-05T07:37:22 IST" duration-ms="58" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateProductWithQueryAndPathParameters -->
        <test-method signature="testGetProductWithQueryAndPathParameters()[pri:0, instance:com.example.tests.Create@5d7148e2]" started-at="2024-09-05T07:37:22 IST" name="testGetProductWithQueryAndPathParameters" finished-at="2024-09-05T07:37:22 IST" duration-ms="58" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path category doesn't match.
Expected: Electronics
  Actual: Grocery1
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path category doesn't match.
Expected: Electronics
  Actual: Grocery1

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor65.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)
at io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at com.example.tests.Create.testGetProductWithQueryAndPathParameters(Create.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetProductWithQueryAndPathParameters -->
      </class> <!-- com.example.tests.Create -->
    </test> <!-- API Tests -->
  </suite> <!-- API Testing Suite -->
</testng-results>
